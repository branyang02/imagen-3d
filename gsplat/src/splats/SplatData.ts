import { Vector3 } from "../math/Vector3";
import { Quaternion } from "../math/Quaternion";
import { Matrix3 } from "../math/Matrix3";

class SplatData {
    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;

    public changed = false;
    public detached = false;

    private _vertexCount: number;
    private _positions: Float32Array;
    private _rotations: Float32Array;
    private _scales: Float32Array;
    private _colors: Uint8Array;
    private _selection: Uint8Array;
    private _semanticData: Float32Array;

    translate: (translation: Vector3) => void;
    rotate: (rotation: Quaternion) => void;
    scale: (scale: Vector3) => void;
    serialize: () => Uint8Array;
    reattach: (
        positions: ArrayBufferLike,
        rotations: ArrayBufferLike,
        scales: ArrayBufferLike,
        colors: ArrayBufferLike,
        selection: ArrayBufferLike,
        semanticData?: ArrayBufferLike,
    ) => void;

    constructor(
        vertexCount: number = 0,
        positions: Float32Array | null = null,
        rotations: Float32Array | null = null,
        scales: Float32Array | null = null,
        colors: Uint8Array | null = null,
        semanticData: Float32Array | null = null,
    ) {
        this._vertexCount = vertexCount;
        this._positions = positions || new Float32Array(0);
        this._rotations = rotations || new Float32Array(0);
        this._scales = scales || new Float32Array(0);
        this._colors = colors || new Uint8Array(0);
        this._selection = new Uint8Array(this.vertexCount);
        this._semanticData = semanticData || new Float32Array(0);

        this.translate = (translation: Vector3) => {
            for (let i = 0; i < this.vertexCount; i++) {
                this.positions[3 * i + 0] += translation.x;
                this.positions[3 * i + 1] += translation.y;
                this.positions[3 * i + 2] += translation.z;
            }

            this.changed = true;
        };

        this.rotate = (rotation: Quaternion) => {
            const R = Matrix3.RotationFromQuaternion(rotation).buffer;
            for (let i = 0; i < this.vertexCount; i++) {
                const x = this.positions[3 * i + 0];
                const y = this.positions[3 * i + 1];
                const z = this.positions[3 * i + 2];

                this.positions[3 * i + 0] = R[0] * x + R[1] * y + R[2] * z;
                this.positions[3 * i + 1] = R[3] * x + R[4] * y + R[5] * z;
                this.positions[3 * i + 2] = R[6] * x + R[7] * y + R[8] * z;

                const currentRotation = new Quaternion(
                    this.rotations[4 * i + 1],
                    this.rotations[4 * i + 2],
                    this.rotations[4 * i + 3],
                    this.rotations[4 * i + 0],
                );

                const newRot = rotation.multiply(currentRotation);
                this.rotations[4 * i + 1] = newRot.x;
                this.rotations[4 * i + 2] = newRot.y;
                this.rotations[4 * i + 3] = newRot.z;
                this.rotations[4 * i + 0] = newRot.w;
            }

            this.changed = true;
        };

        this.scale = (scale: Vector3) => {
            for (let i = 0; i < this.vertexCount; i++) {
                this.positions[3 * i + 0] *= scale.x;
                this.positions[3 * i + 1] *= scale.y;
                this.positions[3 * i + 2] *= scale.z;

                this.scales[3 * i + 0] *= scale.x;
                this.scales[3 * i + 1] *= scale.y;
                this.scales[3 * i + 2] *= scale.z;
            }

            this.changed = true;
        };

        this.serialize = () => {
            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);

            const f_buffer = new Float32Array(data.buffer);
            const u_buffer = new Uint8Array(data.buffer);

            for (let i = 0; i < this.vertexCount; i++) {
                f_buffer[8 * i + 0] = this.positions[3 * i + 0];
                f_buffer[8 * i + 1] = this.positions[3 * i + 1];
                f_buffer[8 * i + 2] = this.positions[3 * i + 2];

                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];
                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];
                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];
                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];

                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];
                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];
                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];

                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;
                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;
                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;
                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;
            }

            return data;
        };

        this.reattach = (
            positions: ArrayBufferLike,
            rotations: ArrayBufferLike,
            scales: ArrayBufferLike,
            colors: ArrayBufferLike,
            selection: ArrayBufferLike,
            semanticData?: ArrayBufferLike,
        ) => {
            console.assert(
                positions.byteLength === this.vertexCount * 3 * 4,
                `Expected ${this.vertexCount * 3 * 4} bytes, got ${positions.byteLength} bytes`,
            );
            this._positions = new Float32Array(positions);
            this._rotations = new Float32Array(rotations);
            this._scales = new Float32Array(scales);
            this._colors = new Uint8Array(colors);
            this._selection = new Uint8Array(selection);
            this._semanticData = semanticData ? new Float32Array(semanticData) : new Float32Array(0);
            this.detached = false;
        };
    }

    static Deserialize(data: Uint8Array, semanticData?: Float32Array): SplatData {
        const vertexCount = data.length / SplatData.RowLength;
        const positions = new Float32Array(3 * vertexCount);
        const rotations = new Float32Array(4 * vertexCount);
        const scales = new Float32Array(3 * vertexCount);
        const colors = new Uint8Array(4 * vertexCount);

        const f_buffer = new Float32Array(data.buffer);
        const u_buffer = new Uint8Array(data.buffer);

        for (let i = 0; i < vertexCount; i++) {
            positions[3 * i + 0] = f_buffer[8 * i + 0];
            positions[3 * i + 1] = f_buffer[8 * i + 1];
            positions[3 * i + 2] = f_buffer[8 * i + 2];

            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;
            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;
            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;
            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;

            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];
            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];
            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];

            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];
            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];
            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];
            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];
        }

        return new SplatData(vertexCount, positions, rotations, scales, colors, semanticData);
    }

    findObjects(query: string) {
        let pointIndices = [];
        const queryLower = query.toLowerCase();
        // TODO: implement search and return point indices

        console.log(query);
        console.log(this.semanticData.length);

        console.log(this.semanticData.slice(0, 256));
        // print the last 256
        console.log(this.semanticData.slice(this.semanticData.length - 256, this.semanticData.length));

        // randomly select 5000 indices
        // for (let i = 0; i < 5000; i++) {
        //     pointIndices.push(Math.floor(Math.random() * this.vertexCount));
        // }

        const to_add = [
            0, 67, 99, 314, 570, 705, 818, 1059, 1885, 1928, 1958, 2018, 2083, 2317, 2345, 2424, 2612, 2810, 2992, 3070,
            3215, 3589, 3592, 3723, 3740, 4136, 4150, 4198, 4335, 4336, 4517, 4537, 4547, 4639, 4679, 4701, 4747, 4830,
            4848, 4911, 4917, 4918, 4955, 5236, 5480, 5576, 5582, 5587, 5593, 5701, 5724, 6150, 6158, 6314, 6332, 6416,
            6421, 6435, 6456, 6482, 7099, 7130, 7139, 7147, 7196, 7226, 7229, 7810, 8127, 8158, 8159, 8279, 9216, 9277,
            9680, 9699, 9702, 9706, 9712, 9721, 9742, 9743, 9780, 9795, 9845, 9856, 10022, 11174, 11392, 11399, 11442,
            11549, 11672, 11773, 11774, 11780, 11781, 11810, 11841, 11931, 12083, 12118, 12120, 12233, 12240, 12663,
            12675, 12730, 12740, 12784, 12794, 12795, 12827, 12843, 12872, 12891, 13069, 13163, 13181, 13272, 13319,
            13486, 13492, 13539, 13552, 13595, 13602, 13617, 13639, 13642, 13646, 13682, 13704, 13732, 13910, 13963,
            14329, 14822, 15347, 15410, 15497, 15520, 15545, 15562, 15597, 15624, 15631, 15644, 15655, 15670, 15697,
            15698, 15706, 15743, 15760, 15774, 15793, 15822, 15919, 16029, 16037, 16038, 16039, 16061, 16089, 16182,
            16212, 16238, 16243, 16287, 16331, 16336, 16343, 16422, 16572, 16717, 16736, 16740, 16759, 16823, 16875,
            18189, 18404, 18815, 19291, 19418, 19425, 19480, 19483, 19667, 19709, 19871, 19886, 20062, 20098, 20134,
            20249, 20252, 20714, 20988, 21006, 21063, 21181, 21189, 21190, 21347, 21378, 21420, 21566, 21570, 21864,
            21960, 22399, 23210, 23756, 23942, 24337, 24351, 24383, 24428, 24750, 25005, 25164, 25271, 25332, 25381,
            25482, 25487, 25537, 25540, 25636, 25642, 25643, 25646, 25698, 25718, 25758, 25803, 25809, 25811, 25916,
            25934, 26258, 26259, 26268, 26313, 26318, 26355, 26448, 26470, 26490, 26627, 26635, 26700, 26704, 26711,
            26851, 26872, 26873, 26890, 26922, 27009, 27014, 27038, 27067, 27138, 27212, 27322, 27340, 27493, 27502,
            27521, 27532, 27559, 27774, 27815, 27858, 27861, 27899, 27919, 28084, 28099, 28140, 28227, 28294, 28298,
            28390, 28399, 28566, 28585, 28608, 28643, 28654, 28863, 28916, 28921, 29010, 29318, 29320, 29367, 29426,
            29437, 29438, 29528, 29736, 29739, 29823, 29912, 29918, 30106, 30109, 30192, 30276, 30373, 30384, 30385,
            30474, 30495, 30511, 30540, 30584, 30647, 30683, 30698, 30733, 30764, 30840, 30900, 30944, 31007, 31010,
            31017, 31026, 31042, 31050, 31138, 31257, 31354, 31363, 31366, 31422, 31466, 31470, 31492, 31496, 31533,
            31537, 31552, 31596, 31705, 31708, 31715, 31822, 31825, 31828, 31950, 32053, 32059, 32082, 32131, 32227,
            32233, 32248, 32255, 32300, 32388, 32397, 32417, 32428, 32549, 32606, 32619, 32638, 32644, 32894, 32902,
            32987, 33001, 33030, 33035, 33037, 33039, 33384, 33691, 33700, 33904, 33933, 33934, 33942, 33955, 33968,
            34087, 34152, 34159, 34311, 34487, 34498, 34538, 34553, 34588, 34622, 34734, 34839, 34840, 34842, 34843,
            34858, 34885, 34906, 35017, 35020, 35065, 35068, 35080, 35107, 35136, 35363, 35367, 35538, 35563, 35610,
            35621, 35638, 35646, 35733, 35755, 35783, 35851, 36050, 36128, 36134, 36372, 36381, 36715, 36803, 36842,
            36857, 37004, 37036, 37073, 37132, 37338, 37507, 37544, 37721, 37856, 37865, 37869, 37874, 37882, 38092,
            38130, 38158, 38161, 38236, 38426, 38432, 38440, 38441, 38446, 38461, 38596, 38648, 38783, 38797, 38894,
            39068, 39069, 39090, 39204, 39243, 39279, 39288, 39335, 39370, 39439, 39593, 39818, 40152, 40205, 40225,
            40227, 40228, 40232, 40283, 40337, 40622, 40624, 40821, 40841, 40842, 40846, 40852, 40881, 41097, 41339,
            41350, 41446, 41580, 41584, 41737, 41739, 41749, 41804, 41972, 41980, 41993, 42035, 42037, 42039, 42062,
            42325, 42326, 42327, 42328, 42375, 42395, 42396, 42397, 42398, 42399, 42400, 42401, 42614, 42628, 42697,
            42720, 42725, 42740, 42745, 42837, 43073, 43223, 43256, 43320, 43564, 43667, 43676, 43769, 43810, 43820,
            44066, 44067, 44231, 44234, 44343, 44780, 44839, 45004, 45060, 45076, 45265, 45533, 45571, 45695, 45998,
            46121, 46205, 46234, 46356, 46407, 46614, 46616, 46986, 47126, 47277, 47278, 47588, 47590, 47591, 47592,
            47723, 47894, 47950, 47952, 48036, 48037, 48648, 48952, 49241, 49818, 50443, 52042, 52829, 53097, 54054,
            55342, 56036, 56231, 61091, 61884, 62007, 62171, 62852, 62921, 63353, 63371, 63461, 63832, 63836, 63883,
            63966, 64240, 64422, 64701, 64781, 64949, 65038, 65397, 65701, 65721, 65728, 65784, 65787, 65843, 65906,
            66075, 66146, 66269, 66295, 66305, 66396, 66410, 66421, 66702, 66942, 66966, 67133, 67481, 67707, 67793,
            67807, 67811, 67915, 68022, 68264, 68332, 68345, 68372, 68682, 68685, 68752, 68864, 68900, 68956, 69220,
            70145, 71439, 71460, 71464, 71757, 71760, 72359, 72601, 72637, 73035, 73254, 73959, 74031, 74388, 75177,
            75288, 75329, 75418, 75803, 76397, 76461, 76466, 76469, 76474, 76478, 76559, 76913, 77166, 77390, 77749,
            78228, 78242, 78265, 78406, 78555, 78592, 78623, 79023, 79035, 79268, 79288, 79301, 79461, 79624, 79655,
            79757, 80207, 80332, 80542, 80628, 80671, 80845, 80930, 80963, 81210, 81221, 81223, 81401, 81902, 82269,
            82582, 82910, 83027, 83385, 83962, 85290, 85473, 85820, 85876, 86271, 87128, 87449, 87582, 87740, 87742,
            88037, 88041, 88052, 90099, 90350, 90424, 90703, 91095, 91100, 91101, 91300, 92018, 92020, 92551, 92818,
            92838, 93141, 93347, 93549, 93909, 93914, 94093, 94496, 94592, 94734, 95085, 95086, 95090, 95091, 95106,
            95413, 95578, 95860, 95956, 96089, 96258, 96966, 96968, 97090, 97094, 97449, 97450, 97452, 97685, 97925,
            98065, 98212, 98838, 99160, 99844, 100190, 100619, 100809, 100919, 101093, 101185, 101423, 101440, 101614,
            101810, 101919, 102037, 102234, 102252, 102383, 102674, 102702, 102784, 102785, 102791, 102796, 102864,
            102974, 102975, 103253, 103262, 103265, 103298, 103516, 103630, 103668, 103675, 103782, 104067, 104315,
            104420, 104454, 104472, 104685, 104902, 104915, 105045, 105098, 105109, 105328, 105406, 105531, 105537,
            105556, 105561, 105614, 105615, 105620, 105719, 105852, 105891, 105908, 105956, 105977, 106005, 106022,
            106124, 106136, 106272, 106287, 106475, 106506, 106700, 106706, 106708, 106750, 106981, 107147, 107230,
            107660, 107726, 107733, 107864, 107884, 108026, 108081, 108099, 108105, 108139, 108383, 108584, 108585,
            108590, 108620, 108739, 108836, 108886, 108955, 108960, 108973, 109014, 109096, 109112, 109125, 109246,
            109397, 109463, 109608, 109632, 110218, 110219, 110224, 110225, 110376, 110444, 110463, 110468, 110546,
            110597, 110605, 110610, 110614, 110951, 110952, 110953, 111006, 111138, 111249, 111360, 111367, 111383,
            111451, 111456, 111491, 111576, 111646, 111705, 111727, 111957, 111999, 112257, 112275, 112302, 112349,
            112400, 112442, 112547, 112824, 112930, 112967, 113108, 113229, 113255, 113256, 113451, 113535, 113551,
            113703, 113832, 113899, 113911, 113919, 113978, 114175, 114227, 114747, 114806, 114866, 114895, 115129,
            115711, 115998, 116690, 116750, 118244, 118359, 118400, 118731, 118732, 119102, 119486, 119490, 119696,
            119754, 119797, 120186, 120363, 120379, 120387, 120406, 120409, 120486, 121512, 121606, 121777, 122243,
            122953, 123520, 123616, 124162, 124346, 124375, 124493, 124646, 124700, 124761, 128553, 128809, 128949,
            128996, 129285, 129314, 129350, 129465, 129468, 129490, 129491, 129506, 129541, 129542, 129546, 129603,
            129947, 129971, 130266, 130326, 130543, 130552, 130563, 130771, 130845, 131001, 131013, 131501, 131720,
            131855, 132015, 132113, 132626, 132739, 132867, 132899, 132968, 133589, 133660, 134265, 134303, 134327,
            134358, 134488, 140407, 140710, 140878, 141074, 141075, 141118, 141133, 141143, 141196, 141201, 141325,
            141338, 141357, 141901, 141974, 141997, 142015, 142181, 142228, 142266, 142312, 142391, 142413, 142427,
            142548, 142603, 143313, 143341, 143526, 143532, 143543, 143591, 143870, 144126, 144353, 144579, 144891,
            145647, 145834, 145982, 146244, 146257, 153494, 153763, 153795, 153893, 153914, 153922, 153946, 154036,
            154523, 154573, 154606, 154653, 154665, 154669, 154783, 154842, 154908, 154991, 155004, 155098, 155116,
            155117, 155438, 155465, 155651, 156245, 156251, 156325, 157040, 157133, 157313, 157814, 157824, 158282,
            158494, 158543, 158552, 158595, 158631, 158688, 158830, 158951, 161653, 165540, 166529, 167489, 167994,
            168006, 168385, 168426, 168620, 168657, 168990, 169197, 169304, 169366, 169851, 170746, 171279, 171553,
            171808, 172147, 172391, 172440, 172465, 172585, 172601, 172686, 172692, 176345, 178619, 180162, 180235,
            181868, 182021, 182090, 182300, 182346, 182551, 182552, 182838, 182858, 183047, 183061, 183094, 183160,
            183288, 183344, 183479, 183592, 183612, 183676, 183698, 183745, 183860, 184569, 184755, 184830, 185028,
            185337, 185511, 185530, 185748, 186092, 186230, 186316, 186345, 186554, 186621, 186685, 186741, 186825,
            186842, 186870, 186957, 195980, 196223, 196309, 196566, 196648, 196698, 196873, 196882, 197419, 197495,
            197582, 197609, 197611, 197663, 197684, 197713, 197729, 197775, 197786, 198308, 198377, 198396, 198624,
            198791, 198796, 199020, 199189, 199718, 199851, 200101, 200128, 200157, 200191, 200498, 200529, 201015,
            201056, 201153, 201197, 201768, 201811, 204026, 208072, 209394, 210157, 210447, 210485, 210486, 210610,
            210692, 210701, 210886, 211001, 211052, 211203, 211425, 211464, 211484, 211688, 211755, 211770, 211791,
            211883, 212025, 212105, 213001, 213040, 213629, 213760, 214127, 214448, 214779, 215042, 215082, 215188,
            215271, 219718, 225007, 225269, 225567, 225648, 225678, 225811, 225849, 225852, 225879, 225927, 225929,
            226014, 226021, 226075, 226344, 226367, 226422, 226444, 226509, 226583, 227119, 227417, 227798, 227830,
            228174, 228275, 228341, 228724, 229132, 229213, 229567, 229648, 229668, 229926, 230023, 237343, 239744,
            239789, 240117, 240180, 240209, 240520, 240644, 240776, 240786, 240857, 240892, 241083, 241337, 241338,
            241365, 242042, 242399, 242674, 242789, 243596, 243957, 244361, 244397, 246353, 251473, 251827, 254458,
            254464, 254648, 255000, 255054, 255097, 255232, 255234, 255369, 255497, 255973, 256211, 256530, 256603,
            256918, 257245, 257575, 257629, 257767, 257844, 258020, 258218, 258255, 267682, 267740, 267774, 267907,
            267928, 268100, 268405, 268423, 268425, 268458, 268557, 268558, 268640, 268666, 268676, 268682, 268690,
            268732, 268739, 268839, 268844, 268992, 269004, 269023, 269120, 269201, 269557, 269960, 270643, 270657,
            270818, 271158, 271188, 271375, 271467, 271506, 271518, 271567, 271719, 271723, 271746, 271790, 271921,
            271922, 279121, 280886, 281121, 281219, 281263, 281309, 281360, 281430, 281441, 281691, 281864, 282329,
            282489, 282509, 282551, 282649, 282690, 282715, 282729, 283343, 283387, 283395, 283491, 284212, 284950,
            284985, 285009, 285163, 285177, 285211, 285224, 285251, 294473, 294665, 294752, 295267, 295349, 295552,
            295568, 295675, 295780, 296394, 296456, 297435, 297544, 297773, 297897, 297989, 298252, 298274, 298316,
            298686, 298688, 299086, 300203, 300393, 305708, 307751, 307887, 307900, 308077, 308466, 308681, 308791,
            308807, 308808, 308865, 308881, 309005, 309006, 309021, 309055, 309104, 309687, 309690, 310007, 310215,
            310448, 310609, 310698, 310787, 310886, 311205, 311457, 319843, 319886, 320061, 320089, 320105, 320207,
            320336, 320337, 320373, 320410, 320490, 320762, 320874, 320896, 320905, 320993, 320996, 321050, 321094,
            321196, 321289, 321308, 321498, 321510, 321514, 322195, 322822, 322991, 323164, 323796, 323815, 323821,
            323841, 323967, 324008, 324145, 333116, 333121, 333237, 333442, 333531, 333582, 333618, 333745, 333892,
            333915, 334015, 334035, 334064, 334228, 334343, 334360, 334361, 334383, 334439, 334567, 334605, 334963,
            335185, 335279, 335577, 335794, 335798, 336039, 336058, 336323, 336350, 336707, 336820, 336884, 336921,
            336934, 337004, 337017, 337041, 337075, 341784, 344793, 344872, 344882, 344930, 345068, 345108, 345367,
            345381, 345426, 345473, 345565, 345660, 345770, 346046, 346559, 346970, 347004, 347208, 347712, 347841,
            348069, 349058, 350156, 355273, 355274, 356078, 356156, 356221, 356664, 356676, 356938, 356989, 357002,
            357014, 357054, 357089, 357109, 357252, 357456, 357485, 357540, 358711, 359450, 359687, 359708, 359711,
            359820, 359833, 361254, 361359, 367041, 367198, 367238, 367241, 367242, 367448, 367476, 367559, 367590,
            367595, 367739, 367954, 367991, 368146, 368224, 368279, 368546, 368915, 369027, 369188, 369212, 369461,
            370064, 370285, 370470, 370501, 370604, 370664, 373405, 377820, 377841, 377881, 377932, 377993, 378066,
            378095, 378236, 378652, 379317, 379395, 379843, 379889, 380053, 380230, 380314, 380624, 381324, 381366,
            382553, 383765, 388666, 389022, 389312, 389355, 389378, 389383, 389434, 389586, 389669, 389685, 389845,
            390174, 390458, 391008, 391203, 391409, 391606, 391743, 391806, 392996, 398769, 399104, 399229, 399531,
            399931, 400187, 400344, 400464, 400576, 401667, 401751, 402369, 406557, 408700, 408731, 408804, 408862,
            408973, 409061, 409102, 409134, 409521, 409724, 409748, 410582, 410724, 411278, 411416, 418337, 418418,
            418459, 418509, 418510, 418588, 418769, 419217, 419313, 419363, 419839, 420109, 420116, 420214, 421279,
            422881, 422989, 423078, 423082, 423096, 423165, 423319, 423347, 423499, 423539, 423731, 423871, 423996,
            424055, 424071, 424250, 424490, 424740, 424877, 425069, 425316, 425550, 425676, 425722, 425756, 425986,
            426020, 426094, 426931, 430223, 431890, 437897, 438064, 438076, 438090, 438097, 438184, 438266, 438338,
            438405, 438474, 438498, 438504, 438509, 438554, 438593, 438613, 438649, 438650, 438832, 438916, 438994,
            439050, 439070, 439143, 439146, 439189, 439190, 439276, 439306, 439354, 439382, 439384, 439456, 439648,
            439721, 439855, 440122, 440126, 440129, 440501, 440558, 440612, 440625, 440635, 440685, 440698, 440946,
            440983, 441067, 441162, 441347, 441467, 441530, 441559, 441579, 441641, 444146, 453282, 453430, 453525,
            453540, 453545, 453609, 453625, 453687, 453709, 453796, 453832, 453959, 453973, 454144, 454148, 454155,
            454311, 454314, 454368, 454423, 454467, 454494, 454637, 455048, 455347, 455438, 455852, 455853, 456172,
            456448, 456469, 456477, 456572, 456644, 456648, 456683, 456703, 457171, 457204, 458232, 459344, 465565,
            467808, 467818, 467870, 467897, 467936, 468245, 468496, 468525, 468611, 468646, 468698, 469349, 469694,
            469993, 470078, 470155, 470159, 470633, 471808, 471813, 471924, 472051, 480889, 480927, 480947, 481022,
            481088, 481176, 481249, 481312, 481348, 481428, 481459, 481502, 481900, 481902, 482043, 482163, 482238,
            482271, 482329, 482397, 482432, 483381, 483408, 483673, 483732, 484182, 484265, 484276, 484386, 484687,
            485137, 486521, 494367, 494538, 494622, 494917, 494926, 495262, 495507, 495790, 496848, 496886, 497146,
            497182, 497257, 497267, 497394, 497651, 500385, 506546, 506582, 506699, 506776, 506832, 506849, 506855,
            506934, 506987, 507190, 507195, 507260, 507716, 507719, 507729, 508253, 508318, 508789, 509061, 509189,
            509240, 509515, 509528, 509670, 509728, 509821, 510194, 510205, 510668, 510981, 511791, 511996, 513846,
            513946, 514202, 518896, 518974, 518980, 519078, 519085, 519216, 519239, 519248, 519264, 519288, 519303,
            519324, 519371, 519373, 519440, 519461, 519524, 519534, 519655, 519712, 519763, 519788, 519822, 519839,
            519867, 519880, 519896, 519908, 519917, 519922, 519941, 519957, 520007, 520015, 520016, 520045, 520049,
            520105, 520108, 520168, 520197, 520211, 520218, 520238, 520303, 520304, 520305, 520312, 520326, 520399,
            520406, 520416, 520489, 520754, 520866, 520897, 521347, 521357, 521419, 521473, 521542, 521558, 521604,
            521618, 521673, 521732, 521979, 522044, 522045, 522057, 522067, 522091, 522159, 522162, 522177, 522690,
            523158, 523530, 524288, 526020, 526261, 526340, 526733, 531446, 531448, 531476, 531545, 531593, 531654,
            531686, 531692, 531728, 531740, 531776, 531812, 531900, 531919, 532236, 532330, 532527, 532540, 532543,
            532584, 532589, 532629, 532714, 532754, 532775, 532789, 532874, 532934, 533052, 533365, 533903, 534216,
            534282, 534338, 534341, 534354, 534641, 534645, 534683, 534796, 534860, 535029, 535515, 536246, 537745,
            543567, 543620, 543906, 544084, 544673, 544825, 545385, 545903, 546645, 554551, 554556, 554561, 554587,
            554589, 554617, 554618, 554701, 554784, 554802, 554817, 554877, 554908, 554967, 554968, 554973, 555019,
            555071, 555162, 555178, 555196, 555223, 555363, 555396, 555401, 555406, 555524, 555534, 555573, 555595,
            555609, 555632, 555675, 555676, 555689, 555769, 555779, 555843, 555851, 555858, 555863, 555887, 555919,
            556162, 556166, 556290, 556330, 556347, 556370, 556374, 556377, 556468, 556726, 556730, 556745, 556771,
            556799, 556909, 557042, 557045, 557080, 557086, 557114, 557161, 557176, 557254, 557365, 557368, 557404,
            557506, 557562, 558806, 558811, 559574, 559753, 566694, 566769, 566809, 566835, 566917, 566961, 567018,
            567124, 567173, 567242, 567383, 567686, 567703, 568336, 568409, 568777, 568803, 568898, 568907, 568918,
            569029, 569317, 569775, 570705, 571026, 571629, 571982, 572008, 577364, 577365, 577387, 577444, 577447,
            577533, 577536, 577562, 577591, 577621, 577640, 577642, 577667, 577687, 577717, 577728, 577896, 577904,
            577910, 577929, 577975, 577976, 577996, 578020, 578041, 578045, 578190, 578200, 578227, 578237, 578262,
            578278, 578291, 578306, 578328, 578700, 578706, 578792, 578910, 579000, 579185, 579317, 579380, 579532,
            579561, 579574, 579616, 579642, 579823, 579934, 579945, 580014, 580059, 580192, 581381, 581635, 582850,
            587965, 587992, 588215, 588487, 588534, 588545, 588583, 588606, 588675, 588891, 588918, 588951, 589006,
            589035, 589069, 589583, 589868, 590129, 590273, 590304, 590612, 590713, 590715, 590763, 590766, 592217,
            592722, 598577, 598578, 598614, 598660, 598717, 598761, 598903, 599034, 599207, 599318, 600084, 600690,
            600815, 608046, 608082, 608246, 608252, 608440, 608450, 608662, 608697, 608915, 609048, 609059, 609455,
            609477, 609794, 609916, 610511, 610601, 611131, 611177, 611186, 611444, 612431, 617367, 618103, 618652,
            618724, 618779, 618938, 618939, 618951, 619313, 619320, 619391, 619397, 619454, 619531, 619547, 620088,
            620096, 620117, 620445, 620448, 620761, 620879, 621223, 622635, 623086, 623093, 623644, 624562, 628045,
            628046, 628055, 628098, 628129, 628130, 628154, 628239, 628281, 628301, 628304, 628327, 628328, 628361,
            628362, 628380, 628464, 628494, 628543, 628698, 628709, 628719, 628733, 628746, 628829, 628874, 628980,
            629012, 629192, 629334, 629525, 629526, 629527, 629610, 629834, 629881, 630106, 630135, 630214, 630273,
            630375, 630380, 630455, 630458, 630476, 630494, 630531, 630559, 630611, 631201, 631455, 631573, 632210,
            633440, 633488, 636781, 636879, 637029, 637047, 637094, 637220, 637282, 637444, 637456, 637481, 637522,
            637666, 637688, 637694, 637757, 637961, 637962, 637977, 637991, 638365, 639243, 639407, 639433, 639671,
            639826, 640754, 641249, 642387, 646258, 646463, 646501, 646519, 646548, 646856, 646869, 646888, 646935,
            647039, 647177, 648397, 648600, 648807, 649006, 650144, 651744, 654990, 655076, 655254, 655313, 655362,
            655777, 655819, 655914, 655944, 655996, 656398, 657070, 657270, 657426, 657461, 657462, 657506, 657691,
            657906, 659027, 663394, 663895, 663906, 663940, 664073, 664114, 664134, 664158, 664159, 664246, 664257,
            664295, 664306, 664347, 664369, 664385, 664487, 664512, 664835, 664855, 664911, 664959, 665012, 665023,
            665107, 665144, 665217, 665256, 665318, 665613, 665705, 665712, 665828, 665904, 665939, 666070, 666136,
            666174, 666186, 666191, 666216, 666236, 666267, 666274, 666281, 666317, 666324, 666492, 667231, 667376,
            667513, 668188, 670947, 672863, 672888, 672912, 673105, 673170, 673226, 673482, 673547, 673600, 673720,
            673751, 673885, 673912, 673942, 673945, 673963, 674596, 674634, 674956, 675111, 675172, 675178, 675264,
            675301, 677735, 681234, 681239, 681246, 681335, 681352, 681394, 681436, 681610, 681641, 681685, 681687,
            681699, 681747, 681860, 681865, 681950, 681960, 681985, 682005, 682325, 682355, 682722, 682824, 682956,
            683265, 683269, 683274, 683280, 683281, 683314, 683335, 683344, 683365, 683373, 683400, 684136, 684252,
            684378, 685103, 685319, 685343, 685358, 685664, 685968, 686083, 689539, 689571, 689668, 689712, 689737,
            689762, 689803, 689805, 689829, 689959, 689971, 689986, 689989, 689990, 690009, 690043, 690050, 690051,
            690077, 690078, 690084, 690107, 690155, 690184, 690299, 690359, 690377, 690379, 690388, 690452, 690466,
            690579, 690699, 690710, 690747, 690788, 690979, 691110, 691225, 691319, 691429, 691484, 691578, 691648,
            691660, 691661, 691750, 691756, 691760, 691773, 691817, 691823, 691965, 692495, 694386, 697912, 697939,
            697993, 698057, 698112, 698224, 698272, 698538, 698558, 698561, 698581, 698640, 698647, 698648, 698759,
            698803, 698943, 699245, 699274, 700024, 700111, 700113, 700121, 700153, 700185, 700201, 700210, 706201,
            706224, 706349, 706387, 706390, 706417, 706419, 706443, 706509, 706513, 706514, 706516, 706542, 706556,
            706611, 706785, 706812, 706835, 707026, 707073, 707084, 707179, 707192, 707224, 707317, 707594, 707606,
            707821, 707948, 708000, 708057, 708161, 708168, 708406, 708491, 708521, 708533, 709482, 709712, 714075,
            714111, 714136, 714154, 714157, 714178, 714182, 714258, 714277, 714301, 714312, 714328, 714348, 714359,
            714399, 714485, 714602, 714614, 714669, 714686, 714713, 714927, 715005, 715038, 715285, 715508, 715569,
            715615, 715842, 715919, 715990, 716011, 716093, 716098, 716151, 716213, 716220, 716228, 717361, 721819,
            722057, 722439, 723107, 729559, 729577, 729691, 729741, 729947, 731668, 731823, 734756, 734798, 734818,
            734841, 734847, 734849, 734883, 734912, 734914, 734915, 734945, 734951, 734974, 734987, 735005, 735006,
            735015, 735060, 735110, 735117, 735144, 735181, 735197, 735204, 735206, 735208, 735216, 735228, 735348,
            735409, 735419, 735444, 735445, 735467, 735513, 735521, 735556, 735602, 735644, 735929, 735960, 735981,
            735987, 735993, 736056, 736156, 736217, 736264, 736270, 736304, 736345, 736389, 736461, 736516, 736669,
            736680, 736694, 736705, 736729, 736758, 736779, 736911, 737313, 738162, 739662, 739957, 741505, 741697,
            742446, 747194, 747210, 747228, 747237, 747408, 747436, 747459, 747501, 747547, 747549, 747552, 747596,
            747617, 747823, 747843, 747849, 747875, 748067, 748074, 748076, 748085, 748138, 748196, 748205, 748228,
            748571, 748585, 748764, 748947, 749055, 749068, 749076, 749234, 749319, 749339, 749357, 752107, 757379,
            759237, 759239, 759261, 759262, 759264, 759283, 759288, 759289, 759314, 759318, 759414, 759416, 759417,
            759419, 759425, 759434, 759466, 759475, 759496, 759497, 759509, 759522, 759525, 759531, 759593, 759600,
            759606, 759610, 759626, 759685, 759704, 759711, 759739, 759742, 759743, 759744, 759758, 759759, 759771,
            759866, 759912, 759936, 759949, 759961, 759995, 760031, 760052, 760073, 760074, 760091, 760094, 760100,
            760122, 760123, 760170, 760171, 760310, 760328, 760484, 760562, 760601, 760614, 760737, 760770, 760771,
            760879, 761000, 761047, 761094, 761101, 761107, 761147, 761241, 761242, 761321, 761384, 761440, 761463,
            761509, 761542, 761622, 761636, 761638, 761694, 761711, 761731, 761764, 761777, 761945, 762909, 763190,
            765167, 769323, 772274, 772297, 772298, 772302, 772307, 772322, 772327, 772417, 772421, 772422, 772461,
            772490, 772492, 772518, 772523, 772576, 772579, 772626, 772631, 772647, 772649, 772688, 772706, 772743,
            772744, 772786, 772787, 772793, 772798, 772815, 772903, 772913, 772940, 772970, 773022, 773031, 773044,
            773070, 773107, 773119, 773150, 773151, 773200, 773201, 773210, 773213, 773241, 773263, 773270, 773271,
            773477, 773552, 773708, 773709, 773796, 773987, 774042, 774131, 774274, 774275, 774300, 774341, 774342,
            774349, 774377, 774452, 774460, 774548, 774586, 774592, 774640, 774702, 774763, 774948, 776105, 777085,
            777215, 777968, 778703, 778900, 783454, 783474, 783479, 783481, 783508, 783569, 783575, 783629, 783639,
            783649, 783651, 783682, 783690, 783692, 783704, 783736, 783777, 783790, 783798, 783803, 783825, 783863,
            783880, 783895, 783904, 783907, 783908, 783993, 784060, 784078, 784082, 784084, 784152, 784171, 784195,
            784214, 784250, 784251, 784262, 784301, 784308, 784316, 784317, 784324, 784327, 784351, 784366, 784368,
            784380, 784409, 784590, 784636, 784760, 784793, 784797, 784868, 785001, 785027, 785033, 785067, 785078,
            785164, 785220, 785296, 785303, 785325, 785363, 785364, 785371, 785477, 785499, 785547, 785572, 785583,
            785586, 785600, 785611, 785624, 785632, 785654, 787006, 787356, 787715, 788168, 788242, 789823, 793884,
            793894, 794041, 794108, 794149, 794160, 794225, 794287, 794304, 794439, 794582, 794586, 794593, 794599,
            794617, 794681, 794786, 794817, 794874, 794875, 794886, 794899, 794934, 794953, 795270, 795865, 796101,
            796160, 796161, 796199, 796255, 798736, 804514, 804597, 804611, 804699, 804708, 804725, 804733, 804871,
            804881, 804906, 804922, 804951, 804976, 804992, 805026, 805093, 805121, 805899, 806099, 806231, 806628,
            807450, 813584, 813629, 813648, 813649, 813670, 813673, 813675, 813769, 813772, 813773, 813823, 813826,
            813846, 813873, 813874, 813882, 813899, 813907, 813930, 813933, 813995, 814001, 814055, 814088, 814126,
            814127, 814132, 814137, 814260, 814308, 814324, 814334, 814362, 814381, 814397, 814398, 814416, 814427,
            814440, 814441, 814442, 814443, 814480, 814492, 814493, 814530, 814531, 814539, 814540, 814549, 814551,
            814576, 814592, 814594, 814600, 814608, 814658, 814723, 814789, 814808, 814856, 814984, 814988, 814996,
            815057, 815182, 815206, 815225, 815248, 815290, 815343, 815466, 815467, 815471, 815475, 815496, 815537,
            815543, 815573, 815594, 815640, 815662, 815705, 815706, 815707, 815714, 815719, 815729, 815740, 815756,
            815760, 815767, 815777, 815922, 818130, 818201, 819370, 819535, 823451,
        ];
        pointIndices = to_add;

        return pointIndices;
    }

    highlight(points: number[]): SplatData {
        const temp_splat_data = this.clone();
        // console.log("Highlighting points" + points);

        for (let i = 0; i < points.length; i++) {
            const index = points[i];
            temp_splat_data.colors[4 * index + 0] = 255;
            temp_splat_data.colors[4 * index + 1] = 0;
            temp_splat_data.colors[4 * index + 2] = 0;
            temp_splat_data.colors[4 * index + 3] = 255;
        }

        return temp_splat_data;
    }

    get vertexCount() {
        return this._vertexCount;
    }

    get positions() {
        return this._positions;
    }

    get rotations() {
        return this._rotations;
    }

    get scales() {
        return this._scales;
    }

    get colors() {
        return this._colors;
    }

    get selection() {
        return this._selection;
    }

    get semanticData() {
        return this._semanticData;
    }

    clone() {
        return new SplatData(
            this.vertexCount,
            new Float32Array(this.positions),
            new Float32Array(this.rotations),
            new Float32Array(this.scales),
            new Uint8Array(this.colors),
            new Float32Array(this.semanticData),
        );
    }
}

export { SplatData };
